---
layout: post
title:  "소켓 프로그래밍"
subtitle:   "오목"
categories: make
tags: omok
---

    
소켓 프로그래밍
-----
- 두 개의 컴퓨터 통신 -> 각 컴퓨터 소켓 이용
- TCP, UDP 로 나뉨

### TCP
> 연결형, 신뢰성, 느림, 패킷(경로 설정 효과적)  
### UDP
> 비연결형, 신뢰성 부족, 빠름, 사전 통신 절차 X  

----

### **응용 계층(웹)** 에서 소켓 사용  
- TCP/IP 아래 층들 상관없이 통신 가능  
### 원리
1. socket() 객체 생성 -> [ 서버, 클라 ]
2. bind() listen() 망대기 -> [ 서버 ]
3. connect() 요청 -> [ 클라 ]
4. accept() 승인 -> [ 서버 ]
5. send() & recv() 주고 받기 -> [ 서버, 클라 ]
6. closesocket() 끝, 소켓 파괴 -> [ 서버, 클라 ]


### 포트
- 16 비트 65,536 개 사용
- 1 ~ 1024 시스템 포트
- 1025 번 이상 선택
- 연결 수립 -> 클라 컴퓨터 사용 중이지 않은 임의의 포트 할당

<br><br><br>

### socket(네퉠 주소 체계, 소켓 타입, 프로토콜)
>소켓 생성  
>실패 -> return -1  

    네퉠 주소 체계 : IPv4 (AF_INET)
                    IPv6 (AF_INET6)
    소켓 타입 : TCP (SOCK_STREAM), UDP (SOCK_DGRAM)
    프로토콜 : TCP (IPPROPTO_TCP), UDP(IPPROPTO_UDP)  

### bind(소켓 변수, 서버 주소 구조체, 서버 주소 구조체의 크기)
>서버 소켓에 IP, 포트번호 할당 -> 네퉠 인터페이스와 묶임  

    IPv4 소켓 주소 구조체 (SOCKADDR_IN)
                : 소켓 주소 체계 (sin_family)
                : 포트 (sin_port)
                : IPv4 주소 (sin_addr)  


> 실제로 사용 할땐 SOCKADDR_IN (IPv4) -> SOCKADDR (일반)  

### listen(소켓 변수, 백 로그 큐의 크기)
> 클라의 연결 요청을 기다려 !  
> 백 로그 : 동시에 연결하는 최대 클라 수

### connect(소켓 변수, 서버 주소 구조체, 서버 주소 구조체 크기)  
>클라 쪽에서 연결 요청 !  
>소켓 생성 실패 -> return -1

    bind()의 클라 버전
    구조체 동일

### accept(소켓 변수, 클라 주소 구조체 변수, 클라 주소 구조체 크기)

>서버 : 연결해도 됨 ~!  
>오류 발생 -> return -1

    함수 내부에서 클라 주소를 설정
    통신에 사용할 클라 소켓 반환

### send(소켓 변수, 문자열 버퍼, 문자열 버퍼 크기, 플래그)  
>상대방한테 데이터 보내기  
>특정한 소켓 - 문자열 버퍼 에 내용을 전송  
>플래그는 0이 default, 실패 -> return -1

### recv(소켓 변수, 문자열 버퍼, 문자열 버퍼 크기, 플래그)  
>데이터 받기  
>특정한 소켓 - 문자열 버퍼에 내용 받음  
> 동일

### closesocket(소켓 변수)  
> 열린 소켓 close

-----


<br><br>


Winsock2
-----
>위 함수들을 리눅스에서는 사용 가능  
>but, 윈도우에서는 안되기에 라이브러리로 사용 가능하게 만듬


1. **WSAStartup()** 
2. socket() 객체 생성 -> [ 서버, 클라 ]
3. bind() listen() 망대기 -> [ 서버 ]
4. connect() 요청 -> [ 클라 ]
5. accept() 승인 -> [ 서버 ]
6. send() & recv() 주고 받기 -> [ 서버, 클라 ]
7. closesocket() 끝, 소켓 파괴 -> [ 서버, 클라 ]
8. **WSACleanup()**
   
### WSAStartup(버전, WSA 데이터 변수)  
> 윈속 버전 설정

### WSACleanup()

> 윈속 사용 끝 !