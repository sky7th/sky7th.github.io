---
layout: post
title:  "[알고리즘] 냅색"
subtitle:   "[알고리즘] 냅색"
categories: algo
tags: algorithm
---
## 배낭 문제(냅색)
D[N][K] 

D[i][j]

i 까지 갔을때
j 무게롤 만들 수 있는 최대value



        0   1   2   3   4   5   6   7
    -----------------------------  
    0 | 0   0   0   0   0   0   0   0  
    1 | 0                      13  13  
    2 | 0               8   8  13  13  
    3 | 0           6   8   8  13  14  
    4 | 0           6   8  12  13  14  


1) 세로줄이 i, 즉 현재이용할 물건
2) 가로줄이 j, 즉 무게의 최대값

다이나믹으로 모든값을 구하되  
여유공간이 없다면 고대로 위의 값을 내리면 되고    
여유공간이 존재한다면 다음의 값을 구하면 된다.  
```cpp
MAX(d[i-1][j], d[i-1][j-w[i]])
``` 


