---
layout: post
title:  "[운영체제] 운영체제 구조, 스케쥴링"
subtitle:   "[운영체제] 운영체제 구조, 스케쥴링"
categories: study
tags: os
---
시스템콜, 사용자모드와 커널모드, 멀티 태스킹, 멀티 프로세싱, 멀티 프로그래밍

## [ 운영체제 구조 ]

Application - 시민  
API - 신청서  (시스템콜을 잘 조합해서 만듬)
Operating System - 도서관  
Hardware - 책  


### 라이브러리 > API > 시스템콜


#### 운영체제를 만드는 과정  
- 운영체제를 개발한다. (kernel)  
- 시스템콜 개발  
- C API (library) ---> Shell 프로그램  
- 응용 프로그램 개발  

**API** : 각 언어별 운영체제 기능 호출 인터페이스 함수 (각 언어별 라이브러리, 인터페이스)  

**시스템콜** : 운영체제 기능을 호출하는 함수


### CPU Protection Rings  
- 사용자 모드  (Ring 3) - 응용 프로그래밍 사용
- 커널 모드  (Ring 0) - OS 가 사용

#### OS는 씨앗, shell 은 껍데기  

### 시스템 콜은 커널 모드로 실행  
- 커널 모드에서만 실행 가능한 기능들이 있음 
- 커널 모드로 실행하려면, 반드시 시스템 콜을 거쳐야 함


## [ 스케쥴링 ]

### 배치 처리 시스템의 문제점 !  
- 앞에 프로그램이 오래 걸리면 뒤에 오는 프로그램도 오래 걸림  
- 멀티 태스킹  
- 여러 사용자의 동시 사용 (다중 사용자)

#### 시분할 시스템 : (다중 사용자 지원, 응답 시간 최소화)  
#### 멀티 태스킹 : (동시 실행하는 것 처럼 보이도록) (단일 CPU)  
#### 멀티 프로세싱 : 여러 CPU에 하나의 프로그램을 병렬로 실행 (속도 극대화)  

### 멀티 프로그래밍 
 - 최대한 CPU 를 많이 활용하도록 하는 시스템
 - 시간 대비 CPU 활용도 UP !

프로그램 실행 중 저장 매체에 접근해야 할 때, 시간이 많이 걸리므로 그 사이에 다른 프로그램을 실행시킨다

#### System Bus -> DMA 에게 저장매채 접근 시켜놓고 다른 프로그램 실행


